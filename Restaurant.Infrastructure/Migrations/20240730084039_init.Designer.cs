// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using infrastructure.Database.RestaurantContext;

#nullable disable

namespace infrastructure.Migrations
{
    [DbContext(typeof(RestaurantDbContext))]
    [Migration("20240730084039_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("infrastructure.Database.RestaurantContext.Models.Address", b =>
                {
                    b.Property<int>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AddressID"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("AddressID");

                    b.ToTable("Addresses", "restaurant");
                });

            modelBuilder.Entity("infrastructure.Database.RestaurantContext.Models.OpeningHours", b =>
                {
                    b.Property<int>("OpeningHoursID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OpeningHoursID"));

                    b.HasKey("OpeningHoursID");

                    b.ToTable("OpeningHours", "restaurant");
                });

            modelBuilder.Entity("infrastructure.Database.RestaurantContext.Models.Owner", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int>("AddressID")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AddressID");

                    b.ToTable("Owners", "restaurant");
                });

            modelBuilder.Entity("infrastructure.Database.RestaurantContext.Models.Restaurant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OpeningHoursID")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OpeningHoursID");

                    b.ToTable("Restaurants", "restaurant");
                });

            modelBuilder.Entity("infrastructure.Database.RestaurantContext.Models.WorkingDay", b =>
                {
                    b.Property<int>("WorkingDayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("WorkingDayID"));

                    b.Property<int>("Day")
                        .HasColumnType("integer");

                    b.Property<bool>("Free")
                        .HasColumnType("boolean");

                    b.Property<TimeSpan>("From")
                        .HasColumnType("interval");

                    b.Property<int?>("OpeningHoursID")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("To")
                        .HasColumnType("interval");

                    b.HasKey("WorkingDayID");

                    b.HasIndex("OpeningHoursID");

                    b.ToTable("WorkingDays", "restaurant");
                });

            modelBuilder.Entity("infrastructure.Database.RestaurantContext.Models.Address", b =>
                {
                    b.OwnsOne("domain.Restaurants.ValueObjects.Coordinates", "Coordinates", b1 =>
                        {
                            b1.Property<int>("AddressID")
                                .HasColumnType("integer");

                            b1.Property<double>("X")
                                .HasColumnType("double precision");

                            b1.Property<double>("Y")
                                .HasColumnType("double precision");

                            b1.HasKey("AddressID");

                            b1.ToTable("Addresses", "restaurant");

                            b1.WithOwner()
                                .HasForeignKey("AddressID");
                        });

                    b.Navigation("Coordinates")
                        .IsRequired();
                });

            modelBuilder.Entity("infrastructure.Database.RestaurantContext.Models.Owner", b =>
                {
                    b.HasOne("infrastructure.Database.RestaurantContext.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("infrastructure.Database.RestaurantContext.Models.Restaurant", b =>
                {
                    b.HasOne("infrastructure.Database.RestaurantContext.Models.OpeningHours", "OpeningHours")
                        .WithMany()
                        .HasForeignKey("OpeningHoursID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OpeningHours");
                });

            modelBuilder.Entity("infrastructure.Database.RestaurantContext.Models.WorkingDay", b =>
                {
                    b.HasOne("infrastructure.Database.RestaurantContext.Models.OpeningHours", null)
                        .WithMany("WorkingDays")
                        .HasForeignKey("OpeningHoursID");
                });

            modelBuilder.Entity("infrastructure.Database.RestaurantContext.Models.OpeningHours", b =>
                {
                    b.Navigation("WorkingDays");
                });
#pragma warning restore 612, 618
        }
    }
}
