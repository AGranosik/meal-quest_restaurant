// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using infrastructure.Database.MenuContext;

#nullable disable

namespace infrastructure.Database.MenuContext.Migrations
{
    [DbContext(typeof(MenuDbContext))]
    [Migration("20240922084720_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("menu")
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GroupMeals", b =>
                {
                    b.Property<int>("GroupID")
                        .HasColumnType("integer");

                    b.Property<int>("MealID")
                        .HasColumnType("integer");

                    b.HasKey("GroupID", "MealID");

                    b.HasIndex("MealID");

                    b.ToTable("GroupMeals", "menu");
                });

            modelBuilder.Entity("GroupMenu", b =>
                {
                    b.Property<int>("GroupsGroupID")
                        .HasColumnType("integer");

                    b.Property<int>("MenuId")
                        .HasColumnType("integer");

                    b.HasKey("GroupsGroupID", "MenuId");

                    b.HasIndex("MenuId");

                    b.ToTable("GroupMenu", "menu");
                });

            modelBuilder.Entity("MealIngredients", b =>
                {
                    b.Property<int>("GroupID")
                        .HasColumnType("integer");

                    b.Property<int>("MealID")
                        .HasColumnType("integer");

                    b.HasKey("GroupID", "MealID");

                    b.HasIndex("MealID");

                    b.ToTable("MealIngredients", "menu");
                });

            modelBuilder.Entity("domain.Menus.Aggregates.Entities.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("RestaurantID")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RestaurantID");

                    b.ToTable("Menus", "menu");
                });

            modelBuilder.Entity("domain.Menus.ValueObjects.Group", b =>
                {
                    b.Property<int>("GroupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GroupID"));

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("GroupID");

                    b.ToTable("Groups", "menu");
                });

            modelBuilder.Entity("domain.Menus.ValueObjects.Identifiers.RestaurantIdMenuId", b =>
                {
                    b.Property<int>("Value")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Value"));

                    b.HasKey("Value")
                        .HasName("RestaurantID");

                    b.ToTable("Restaurants", "menu");
                });

            modelBuilder.Entity("domain.Menus.ValueObjects.Ingredient", b =>
                {
                    b.Property<int>("IngredientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IngredientID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IngredientID");

                    b.ToTable("Ingredients", "menu");
                });

            modelBuilder.Entity("domain.Menus.ValueObjects.Meal", b =>
                {
                    b.Property<int>("MealID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MealID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("MealID");

                    b.ToTable("Meals", "menu");
                });

            modelBuilder.Entity("GroupMeals", b =>
                {
                    b.HasOne("domain.Menus.ValueObjects.Group", null)
                        .WithMany()
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("domain.Menus.ValueObjects.Meal", null)
                        .WithMany()
                        .HasForeignKey("MealID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GroupMenu", b =>
                {
                    b.HasOne("domain.Menus.ValueObjects.Group", null)
                        .WithMany()
                        .HasForeignKey("GroupsGroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("domain.Menus.Aggregates.Entities.Menu", null)
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MealIngredients", b =>
                {
                    b.HasOne("domain.Menus.ValueObjects.Meal", null)
                        .WithMany()
                        .HasForeignKey("GroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("domain.Menus.ValueObjects.Ingredient", null)
                        .WithMany()
                        .HasForeignKey("MealID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("domain.Menus.Aggregates.Entities.Menu", b =>
                {
                    b.HasOne("domain.Menus.ValueObjects.Identifiers.RestaurantIdMenuId", null)
                        .WithMany()
                        .HasForeignKey("RestaurantID")
                        .HasConstraintName("FK_RestaurantId");
                });
#pragma warning restore 612, 618
        }
    }
}
